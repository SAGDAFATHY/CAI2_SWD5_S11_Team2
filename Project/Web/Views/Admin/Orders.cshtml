@model IEnumerable<Domain.Models.Order>
@using Domain.Models
@{
    ViewData["Title"] = "Admin Orders"; ViewData["Description"] = "TechEcommerce";
}

<div class="container mt-150 mb-150">
    <div class="row">
         @* <div class="col-lg-8 offset-lg-2 text-center">  *@

            <div class="container-fluid mt-4">

                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["Success"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        @TempData["Error"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                <div class="card">
                    <div class="card-header " style="background-color:#fd7e14;">
                    <h5 class="mb-0" style="color:#FFFAF2">Orders List</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Order #</th>
                                        <th>Customer</th>
                                        <th>Order Date</th>
                                        <th>Total Amount</th>
                                        <th>Status</th>
                                        <th>Payment Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var order in Model)
                                    {
                                        <tr>
                                            <td>
                                                <button class="btn btn-sm btn-outline-info toggle-details" data-order-id="@order.Id">
                                                    <i class="bi bi-chevron-down"></i>
                                                </button>
                                            </td>
                                            <td>@order.OrderNumber</td>
                                            <td>@(order.Customer?.Id)</td>
                                            <td>@order.OrderDate.ToString("MMM dd, yyyy")</td>
                                            <td>@order.TotalAmount.ToString("C")</td>
                                            <td>
                                                <span class="badge @GetStatusBadgeClass(order.Status)">
												@order.Status
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @GetPaymentStatusBadgeClass(order.PaymentStatus)">
												@order.PaymentStatus
                                                </span>
                                            </td>
                                            <td>
                                                <div class="btn-group">
                                                    <a asp-controller="Order" asp-action="OrderDetails" asp-route-id="@order.Id" class="btn btn-sm btn-info">
                                                        <i class="bi bi-eye"></i> View
                                                    </a>

                                                    <!-- Update Status Dropdown -->
                                                    <div class="dropdown ms-1">
                                                        <button class="btn btn-sm btn-warning dropdown-toggle" type="button"
                                                                id="statusDropdown_@order.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                                            Update Status
                                                        </button>
                                                        <ul class="dropdown-menu" aria-labelledby="statusDropdown_@order.Id">
                                                            @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                                                            {
                                                                <li>
                                                                    <form asp-controller="Order" asp-action="UpdateStatus" method="post" class="dropdown-item-form">
                                                                        @Html.AntiForgeryToken()
                                                                        <input type="hidden" name="orderId" value="@order.Id" />
                                                                        <input type="hidden" name="newStatus" value="@status" />
                                                                        <button type="submit" class="dropdown-item @(order.Status == status ? "active" : "")">
                                                                            @status.ToString()
                                                                        </button>
                                                                    </form>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>

                                                    <!-- Cancel Order Button -->
                                                    @if (order.Status == OrderStatus.Pending || order.Status == OrderStatus.Processing)
                                                    {
                                                        <form asp-controller="Order" asp-action="Cancel" method="post" class="d-inline ms-1">
                                                            @Html.AntiForgeryToken()
                                                            <input type="hidden" name="orderId" value="@order.Id" />
                                                            <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to cancel this order?')">
                                                                <i class="bi bi-x-circle"></i> Cancel
                                                            </button>
                                                        </form>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="order-details-row" id="details-@order.Id" style="display: none;">
                                            <td colspan="8" class="p-0">
                                                <div class="order-details-container p-3" id="order-details-container-@order.Id">
                                                    <div class="text-center">
                                                        <div class="spinner-border text-primary" role="status">
                                                            <span class="visually-hidden">Loading...</span>
                                                        </div>
                                                        <p>Loading order details...</p>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>


         @* </div>  *@
    </div>
</div>



@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Toggle order details
            const toggleButtons = document.querySelectorAll('.toggle-details');

            toggleButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const orderId = this.getAttribute('data-order-id');
                    const detailsRow = document.getElementById(`details-${orderId}`);
                    const detailsContainer = document.getElementById(`order-details-container-${orderId}`);
                    const icon = this.querySelector('i');

                    // Toggle display
                    if (detailsRow.style.display === 'none') {
                        detailsRow.style.display = 'table-row';
                        icon.classList.remove('bi-chevron-down');
                        icon.classList.add('bi-chevron-up');

                        // Load order details only if not already loaded
                        if (detailsContainer.getAttribute('data-loaded') !== 'true') {
                            fetch(`/Order/OrderDetails?id=${orderId}&partial=true`)
                                .then(response => response.text())
                                .then(data => {
                                    detailsContainer.innerHTML = data;
                                    detailsContainer.setAttribute('data-loaded', 'true');
                                })
                                .catch(error => {
                                    detailsContainer.innerHTML = `<div class="alert alert-danger">Error loading order details: ${error}</div>`;
                                });
                        }
                    } else {
                        detailsRow.style.display = 'none';
                        icon.classList.remove('bi-chevron-up');
                        icon.classList.add('bi-chevron-down');
                    }
                });
            });
        });
    </script>
}

@section Styles {
    <style>
        .dropdown-item-form {
            margin: 0;
            padding: 0;
        }

            .dropdown-item-form .dropdown-item {
                padding: 0.25rem 1.5rem;
                cursor: pointer;
                width: 100%;
                text-align: left;
                background: none;
                border: none;
            }

                .dropdown-item-form .dropdown-item:hover {
                    background-color: #f8f9fa;
                }

                .dropdown-item-form .dropdown-item.active {
                    background-color: #e9ecef;
                    font-weight: bold;
                }

        .order-details-row {
            background-color: #f8f9fa;
        }

        .order-details-container {
            border-top: 1px solid #dee2e6;
            border-bottom: 1px solid #dee2e6;
        }
    </style>
}

@functions {
    string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bg-warning text-dark" ,
            OrderStatus.Processing => "bg-info",
            OrderStatus.Shipped => "bg-primary",
            OrderStatus.Delivered => "bg-success",
            OrderStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetPaymentStatusBadgeClass(PaymentStatus status)
    {
        return status switch
        {
            PaymentStatus.Pending => "bg-warning text-dark",
            PaymentStatus.Paid => "bg-success",
            PaymentStatus.Failed => "bg-danger",
            _ => "bg-secondary"
        };
    }
}